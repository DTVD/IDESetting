[
    // multiple commands setting
    // { "keys": ["ctrl+t","ctrl+j"], "command": "navigate_to_definition_and_soft_undo"},

    // select and copy (not work now)
    // { "keys": ["ctrl+alt+c"], "command": "select_and_copy" },
    // { "keys": ["ctrl+alt+v"], "command": "select_and_paste" },


    // For MacOSX
    { "keys": ["ctrl+shift+p"], "command": "show_overlay", "args": {"overlay": "command_palette"} },
    { "keys": ["ctrl+p"], "command": "show_overlay", "args": {"overlay": "goto", "show_files": true} },
    { "keys": ["ctrl+s"], "command": "save" },
    { "keys": ["ctrl+i"], "command": "show_panel", "args": {"panel": "incremental_find", "reverse":false} },
    { "keys": ["ctrl+f"], "command": "show_panel", "args": {"panel": "find"} },

    // Paste with indent
    { "keys": ["ctrl+v"], "command": "paste_and_indent" },
    { "keys": ["ctrl+shift+v"], "command": "paste" },

    // Rebinding ctrl+k
    { "keys": ["ctrl+alt+j"], "command": "join_lines" },
    { "keys": ["ctrl+shift+]"], "command": "indent" },
    { "keys": ["ctrl+shift+["], "command": "unindent" },

    { "keys": ["ctrl+]", "ctrl+d"], "command": "find_under_expand_skip" },
    { "keys": ["ctrl+]", "ctrl+u"], "command": "upper_case" },
    { "keys": ["ctrl+]", "ctrl+l"], "command": "lower_case" },
    { "keys": ["ctrl+]", "ctrl+space"], "command": "set_mark" },
    { "keys": ["ctrl+]", "ctrl+a"], "command": "select_to_mark" },
    { "keys": ["ctrl+]", "ctrl+w"], "command": "delete_to_mark" },
    { "keys": ["ctrl+]", "ctrl+x"], "command": "swap_with_mark" },
    { "keys": ["ctrl+]", "ctrl+y"], "command": "yank" },
    { "keys": ["ctrl+]", "ctrl+]"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete to Hard EOL.sublime-macro"} },
    { "keys": ["ctrl+]", "ctrl+backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete to Hard BOL.sublime-macro"} },
    { "keys": ["ctrl+]", "ctrl+g"], "command": "clear_bookmarks", "args": {"name": "mark"} },
    { "keys": ["ctrl+]", "ctrl+c"], "command": "show_at_center" },
    { "keys": ["ctrl+]", "ctrl+1"], "command": "fold_by_level", "args": {"level": 1} },
    { "keys": ["ctrl+]", "ctrl+2"], "command": "fold_by_level", "args": {"level": 2} },
    { "keys": ["ctrl+]", "ctrl+3"], "command": "fold_by_level", "args": {"level": 3} },
    { "keys": ["ctrl+]", "ctrl+4"], "command": "fold_by_level", "args": {"level": 4} },
    { "keys": ["ctrl+]", "ctrl+5"], "command": "fold_by_level", "args": {"level": 5} },
    { "keys": ["ctrl+]", "ctrl+6"], "command": "fold_by_level", "args": {"level": 6} },
    { "keys": ["ctrl+]", "ctrl+7"], "command": "fold_by_level", "args": {"level": 7} },
    { "keys": ["ctrl+]", "ctrl+8"], "command": "fold_by_level", "args": {"level": 8} },
    { "keys": ["ctrl+]", "ctrl+9"], "command": "fold_by_level", "args": {"level": 9} },
    { "keys": ["ctrl+]", "ctrl+0"], "command": "unfold_all" },
    { "keys": ["ctrl+]", "ctrl+j"], "command": "unfold_all" },
    { "keys": ["ctrl+]", "ctrl+t"], "command": "fold_tag_attributes" },

    { "keys": ["ctrl+pageup"], "command": "next_view_in_stack" },
    { "keys": ["ctrl+pagedown"], "command": "prev_view_in_stack" },
    { "keys": ["ctrl+k"], "command": "next_view" },
    { "keys": ["ctrl+j"], "command": "prev_view" },

    // Reindent
    { "keys": ["ctrl+t", "ctrl+f"], "command": "reindent", "args": {"single_line": false} },

    // Soft_undo and soft_redo
    { "keys": ["ctrl+t","ctrl+u"], "command": "soft_undo" },
    { "keys": ["ctrl+t","ctrl+shift+u"], "command": "soft_redo" },

    // Re-binding ctags
    { "keys": ["ctrl+]"], "command": "unbound" },
    { "keys": ["ctrl+["], "command": "unbound" },
    { "keys": ["ctrl+alt+]"], "command": "indent" },
    { "keys": ["ctrl+alt+["], "command": "unindent" },
    { "keys": ["ctrl+["], "command": "exit_insert_mode" },
    { "keys": ["ctrl+t","ctrl+]"], "command": "navigate_to_definition"},
    { "keys": ["ctrl+t","ctrl+t"], "command": "jump_prev" },
    { "keys": ["ctrl+t","ctrl+y"], "command": "search_for_definition" },

    // Goto Document
    { "keys": ["f1"], "command": "goto_documentation" },

    // Alignment
    { "keys": ["ctrl+t","ctrl+a"], "command": "alignment" },

    // Simple Clone
    {
        "keys": [ "ctrl+t", "ctrl+l" ],
        "command": "simple_clone",
        "args": { "location": "right" },
        "context": [{ "key": "simpleclone_keymap_enabled.right" }]
    },
    {
        "keys": [ "ctrl+t", "ctrl+j" ],
        "command": "simple_clone",
        "args": { "location": "down" },
        "context": [{ "key": "simpleclone_keymap_enabled.down" }]
    },
      {
        "keys": [ "ctrl+t", "ctrl+n" ],
        "command": "simple_clone",
        "args": { "location": "new_window" },
        "context": [{ "key": "simpleclone_keymap_enabled.new_window" }]
    },
    // Move Tab
    {
        "keys": ["ctrl+shift+alt+end"],
        "command": "move_tab",
        "args": { "position": "999" }
    },
    {
        "keys": ["ctrl+shift+alt+home"],
        "command": "move_tab",
        "args": { "position": "0" }
    },
    {
        "keys": ["ctrl+shift+alt+h"],
        "command": "move_tab",
        "args": { "position": "-1" }
    },
    {
        "keys": ["ctrl+shift+alt+l"],
        "command": "move_tab",
        "args": { "position": "+1" }
    },

    // Reveal in side bar. Let manually here and not use SyncedSideBar Package
    { "keys": ["super+shift+r"], "command": "reveal_in_side_bar" },

    // Navigate in sidebar use hjkl
    {
        "keys": ["h"],
        "command": "move",
        "args": {"by": "characters", "forward": false},
        "context": [{"key": "control", "operand": "sidebar_tree"}]
    },
    {
        "keys": ["j"],
        "command": "move",
        "args": {"by": "lines", "forward": true},
        "context": [{"key": "control", "operand": "sidebar_tree"}]
    },
    {
        "keys": ["k"],
        "command": "move",
        "args": {"by": "lines", "forward": false},
        "context": [{"key": "control", "operand": "sidebar_tree"}]
    },
    {
        "keys": ["l"],
        "command": "move",
        "args": {"by": "characters", "forward": true},
        "context": [{"key": "control", "operand": "sidebar_tree"}]
    },

    // Scroll up down in sidebar
    {
        "keys": ["ctrl+u"],
        "command": "move",
        "args": {"by": "pages", "forward": false},
        "context": [{"key": "control", "operand": "sidebar_tree"}]
    },
    {
        "keys": ["ctrl+d"],
        "command": "move",
        "args": {"by": "pages", "forward": true},
        "context": [{"key": "control", "operand": "sidebar_tree"}]
    },

    // Open in exploer
    {
        "keys": ["ctrl+t","ctrl+e"],
        "command": "open_dir",
        "args": {"dir": "$file_path", "file": "$file_name"}
    },

    // SplitScreen-Resizer
    {
        "keys": ["ctrl+alt+h"],
        "command": "split_screen_resizer",
        "args": {"side": "left"}
    },
    {
        "keys": ["ctrl+alt+l"],
        "command": "split_screen_resizer",
        "args": {"side": "right"}
    },

    // Plain Task
    {
        "keys": ["ctrl+o"],
        "command": "plain_tasks_complete",
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.todo"
        }]
    },
    {
        "keys": ["ctrl+c"],
        "command": "plain_tasks_cancel",
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.todo"
        }]
    },
    {
        "keys": ["ctrl+enter"],
        "command": "plain_tasks_open_url",
        "context": [{
            "key": "selector",
            "operator": "equal",
            "operand": "text.todo"
        }]
    },

    // Trailing space
    { "keys": ["ctrl+t","ctrl+s"], "command": "delete_trailing_spaces" },

    // Close file
    { "keys": ["ctrl+f4"], "command": "close" },
    { "keys": ["ctrl+w"], "command": "close_file" },

    // Convert tab to space
    { "keys": ["ctrl+shift+c"], "command": "expand_tabs", "args": {"set_translate_tabs": true} },

    // Ctrl+r
    {
        "keys": ["ctrl+alt+r"],
        "command": "show_overlay",
        "args": {"overlay": "goto", "text": "@"},
        "context":[{
            "key": "setting.command_mode"
        }]
    }

]
